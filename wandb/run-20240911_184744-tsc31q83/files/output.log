  0%|                                                                                                                     | 0/2001 [00:00<?, ?it/s]/Users/nhassen/Documents/MLOPS/code/gihub/Stochastic-Environments-for-Sequential-Decision-Making/grid/main.py:50: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:233.)
  tf = lambda x: torch.FloatTensor(x).to(_dev[0])
  0%|                                                                                                                     | 0/2001 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/Users/nhassen/Documents/MLOPS/code/gihub/Stochastic-Environments-for-Sequential-Decision-Making/grid/main.py", line 469, in <module>
    main(args)
  File "/Users/nhassen/Documents/MLOPS/code/gihub/Stochastic-Environments-for-Sequential-Decision-Making/grid/main.py", line 367, in main
    data = agent.sample_many(args.mbsize, all_visited)
  File "/Users/nhassen/Documents/MLOPS/code/gihub/Stochastic-Environments-for-Sequential-Decision-Making/grid/main.py", line 185, in sample_many
    s = tf([i.reset()[0] for i in self.envs])
  File "/Users/nhassen/Documents/MLOPS/code/gihub/Stochastic-Environments-for-Sequential-Decision-Making/grid/main.py", line 50, in <lambda>
    tf = lambda x: torch.FloatTensor(x).to(_dev[0])
  File "/Users/nhassen/opt/anaconda3/envs/gfn-stochEnv/lib/python3.10/site-packages/torch/cuda/__init__.py", line 221, in _lazy_init
    raise AssertionError("Torch not compiled with CUDA enabled")
AssertionError: Torch not compiled with CUDA enabled